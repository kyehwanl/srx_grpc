// Code generated by protoc-gen-go. DO NOT EDIT.
// source: srx_grpc.proto

package srxapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PduRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Length               uint32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PduRequest) Reset()         { *m = PduRequest{} }
func (m *PduRequest) String() string { return proto.CompactTextString(m) }
func (*PduRequest) ProtoMessage()    {}
func (*PduRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_srx_grpc_5a371d71e29549ff, []int{0}
}
func (m *PduRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PduRequest.Unmarshal(m, b)
}
func (m *PduRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PduRequest.Marshal(b, m, deterministic)
}
func (dst *PduRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PduRequest.Merge(dst, src)
}
func (m *PduRequest) XXX_Size() int {
	return xxx_messageInfo_PduRequest.Size(m)
}
func (m *PduRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PduRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PduRequest proto.InternalMessageInfo

func (m *PduRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PduRequest) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type PduResponse struct {
	ValidationStatus     uint32   `protobuf:"varint,1,opt,name=validation_status,json=validationStatus,proto3" json:"validation_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PduResponse) Reset()         { *m = PduResponse{} }
func (m *PduResponse) String() string { return proto.CompactTextString(m) }
func (*PduResponse) ProtoMessage()    {}
func (*PduResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_srx_grpc_5a371d71e29549ff, []int{1}
}
func (m *PduResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PduResponse.Unmarshal(m, b)
}
func (m *PduResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PduResponse.Marshal(b, m, deterministic)
}
func (dst *PduResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PduResponse.Merge(dst, src)
}
func (m *PduResponse) XXX_Size() int {
	return xxx_messageInfo_PduResponse.Size(m)
}
func (m *PduResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PduResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PduResponse proto.InternalMessageInfo

func (m *PduResponse) GetValidationStatus() uint32 {
	if m != nil {
		return m.ValidationStatus
	}
	return 0
}

func init() {
	proto.RegisterType((*PduRequest)(nil), "srxapi.PduRequest")
	proto.RegisterType((*PduResponse)(nil), "srxapi.PduResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SRxApiClient is the client API for SRxApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SRxApiClient interface {
	SendPacketToSRxServer(ctx context.Context, in *PduRequest, opts ...grpc.CallOption) (*PduResponse, error)
}

type sRxApiClient struct {
	cc *grpc.ClientConn
}

func NewSRxApiClient(cc *grpc.ClientConn) SRxApiClient {
	return &sRxApiClient{cc}
}

func (c *sRxApiClient) SendPacketToSRxServer(ctx context.Context, in *PduRequest, opts ...grpc.CallOption) (*PduResponse, error) {
	out := new(PduResponse)
	err := c.cc.Invoke(ctx, "/srxapi.SRxApi/SendPacketToSRxServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SRxApiServer is the server API for SRxApi service.
type SRxApiServer interface {
	SendPacketToSRxServer(context.Context, *PduRequest) (*PduResponse, error)
}

func RegisterSRxApiServer(s *grpc.Server, srv SRxApiServer) {
	s.RegisterService(&_SRxApi_serviceDesc, srv)
}

func _SRxApi_SendPacketToSRxServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PduRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SRxApiServer).SendPacketToSRxServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/srxapi.SRxApi/SendPacketToSRxServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SRxApiServer).SendPacketToSRxServer(ctx, req.(*PduRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SRxApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "srxapi.SRxApi",
	HandlerType: (*SRxApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPacketToSRxServer",
			Handler:    _SRxApi_SendPacketToSRxServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "srx_grpc.proto",
}

func init() { proto.RegisterFile("srx_grpc.proto", fileDescriptor_srx_grpc_5a371d71e29549ff) }

var fileDescriptor_srx_grpc_5a371d71e29549ff = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xb1, 0x4b, 0xc5, 0x30,
	0x10, 0x87, 0xad, 0x48, 0x86, 0xd3, 0x27, 0x7a, 0xa2, 0x3c, 0x9c, 0x4a, 0xa7, 0x82, 0xd0, 0x41,
	0x17, 0x71, 0xd3, 0xd9, 0xa1, 0x24, 0xee, 0x25, 0x36, 0x47, 0x0d, 0x96, 0x24, 0x26, 0xd7, 0x92,
	0x3f, 0x5f, 0x48, 0x85, 0xe2, 0x76, 0xf7, 0x1d, 0x77, 0xf7, 0xfd, 0xe0, 0x32, 0xc5, 0x3c, 0x4c,
	0x31, 0x8c, 0x5d, 0x88, 0x9e, 0x3d, 0x8a, 0x14, 0xb3, 0x0e, 0xb6, 0x79, 0x06, 0xe8, 0xcd, 0x22,
	0xe9, 0x67, 0xa1, 0xc4, 0x88, 0x70, 0x66, 0x34, 0xeb, 0x63, 0x55, 0x57, 0xed, 0x85, 0x2c, 0x35,
	0xde, 0x81, 0x98, 0xc9, 0x4d, 0xfc, 0x75, 0x3c, 0xad, 0xab, 0xf6, 0x20, 0xff, 0xba, 0xe6, 0x05,
	0xce, 0xcb, 0x66, 0x0a, 0xde, 0x25, 0xc2, 0x07, 0xb8, 0x5e, 0xf5, 0x6c, 0x8d, 0x66, 0xeb, 0xdd,
	0x90, 0x58, 0xf3, 0x92, 0xca, 0x9d, 0x83, 0xbc, 0xda, 0x07, 0xaa, 0xf0, 0xc7, 0x77, 0x10, 0x4a,
	0xe6, 0xd7, 0x60, 0xf1, 0x0d, 0x6e, 0x15, 0x39, 0xd3, 0xeb, 0xf1, 0x9b, 0xf8, 0xc3, 0x2b, 0x99,
	0x15, 0xc5, 0x95, 0x22, 0x62, 0xb7, 0x19, 0x76, 0xbb, 0xde, 0xfd, 0xcd, 0x3f, 0xb6, 0x3d, 0x6e,
	0x4e, 0x3e, 0x45, 0x89, 0xf4, 0xf4, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x94, 0xb2, 0x94, 0x8b, 0xe4,
	0x00, 0x00, 0x00,
}
